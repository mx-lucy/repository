webpackJsonp([27],{vaLf:function(t,e){},vh9w:function(t,e,c){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var s={render:function(){var t=this,e=t.$createElement,c=t._self._c||e;return c("div",[t._v("\n  input: "),c("el-input",{staticStyle:{width:"200px"},model:{value:t.inttest,callback:function(e){t.inttest=e},expression:"inttest"}}),t._v(" "),c("el-button",{on:{click:t.runall}},[t._v("runall")]),t._v(" "),c("p",[t._v(t._s(t.Reg1))]),t._v(" "),c("p",[t._v("输入："+t._s(t.inttest))]),t._v(" "),c("p",[t._v("test = "+t._s(t.test1)+"\n    "),c("el-button",{on:{click:t.checkTest}},[t._v("checkTest")]),t._v(" "),c("b",{staticStyle:{color:"#2276d2"}},[t._v("  test判断是否匹配，返回值为true或者false")])],1),t._v(" "),c("p",[t._v("match = "+t._s(t.test2)+"\n    "),c("el-button",{on:{click:t.checkMatch}},[t._v("checkMatch")]),t._v(" "),c("b",{staticStyle:{color:"#2276d2"}},[t._v("  match取出匹配的字段")])],1),t._v(" "),c("p",[t._v("search = "+t._s(t.test3)+"\n    "),c("el-button",{on:{click:t.checkSearch}},[t._v("checkSearch")]),t._v(" "),c("b",{staticStyle:{color:"#2276d2"}},[t._v("  search() 方法用于检索字符串中指定的子字符串，或检索与正则表达式相匹配的子字符串，并返回子串的起始位置。")])],1),t._v(" "),c("p",[t._v("replace = "+t._s(t.test4)+"\n    "),c("el-button",{on:{click:t.checkReplace}},[t._v("checkReplace")]),t._v(" "),c("b",{staticStyle:{color:"#2276d2"}},[t._v("  replace() 方法 用于在字符串中用一些字符替换另一些字符，或替换一个与正则表达式匹配的子串。")])],1),t._v(" "),c("p",[t._v("exec = "+t._s(t.test5)+"\n    "),c("el-button",{on:{click:t.checkExec}},[t._v("checkExec")]),t._v(" "),c("b",{staticStyle:{color:"#2276d2"}},[t._v("  exec() 方法用于检索字符串中的正则表达式的匹配。 该函数返回一个数组，其中存放匹配的结果。如果未找到匹配，则返回值为 null。")])],1)],1)},staticRenderFns:[]};var n=c("VU/8")({name:"Regex",data:function(){return{inttest:"",RegExpTest:/[0-9]+/,test1:"",test2:"",test3:"",test4:"",test5:"",Reg1:""}},methods:{checkTest:function(){this.test1=this.RegExpTest.test(this.inttest)},checkMatch:function(){this.test2=this.inttest.match(this.RegExpTest)},checkSearch:function(){this.test3=this.inttest.search(this.RegExpTest)},checkReplace:function(){this.test4=this.inttest.replace(this.RegExpTest,"a")},checkExec:function(){this.test5=this.RegExpTest.exec(this.inttest)},checkReg:function(){this.Reg1="正则表达式："+this.RegExpTest},runall:function(){this.checkTest(),this.checkMatch(),this.checkSearch(),this.checkReplace(),this.checkExec(),this.checkReg()}},created:function(){this.runall()}},s,!1,function(t){c("vaLf")},"data-v-04f44c5f",null);e.default=n.exports}});
//# sourceMappingURL=27.c8ba7ff3189df5d7e2e0.js.map