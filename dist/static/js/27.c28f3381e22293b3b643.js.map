{"version":3,"sources":["webpack:///src/view/safe/SQL.vue","webpack:///./src/view/safe/SQL.vue?8e70","webpack:///./src/view/safe/SQL.vue"],"names":["safe_SQL","render","this","$createElement","_self","_c","_m","staticRenderFns","_vm","_h","_v","Component","__webpack_require__","normalizeComponent","name","ssrContext","__webpack_exports__"],"mappings":"6HAsBA,ICnBeA,GADEC,OAFjB,WAA0BC,KAAaC,eAAbD,KAAuCE,MAAAC,GAAwB,OAA/DH,KAA+DI,GAAA,IAExEC,iBADjB,WAAoC,IAAAC,EAAAN,KAAaO,EAAAD,EAAAL,eAA0BE,EAAAG,EAAAJ,MAAAC,IAAAI,EAAwB,OAAAJ,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAAAG,EAAAE,GAAA,WAAAF,EAAAE,GAAA,KAAAL,EAAA,KAAAG,EAAAE,GAAA,iLAAAF,EAAAE,GAAA,KAAAL,EAAA,OAAAA,EAAA,MAAAG,EAAAE,GAAA,WAAAF,EAAAE,GAAA,KAAAL,EAAA,KAAAG,EAAAE,GAAA,mHAAAF,EAAAE,GAAA,KAAAL,EAAA,MAAAG,EAAAE,GAAA,WAAAF,EAAAE,GAAA,KAAAL,EAAA,MAAAG,EAAAE,GAAA,WAAAF,EAAAE,GAAA,KAAAL,EAAA,KAAAG,EAAAE,GAAA,2BAAAF,EAAAE,GAAA,KAAAL,EAAA,MAAAG,EAAAE,GAAA,WAAAF,EAAAE,GAAA,KAAAL,EAAA,KAAAG,EAAAE,GAAA,mCAAAF,EAAAE,GAAA,KAAAL,EAAA,MAAAG,EAAAE,GAAA,aAAAF,EAAAE,GAAA,KAAAL,EAAA,KAAAG,EAAAE,GAAA,qEAAAF,EAAAE,GAAA,KAAAL,EAAA,OAAAG,EAAAE,GAAA,yBCEnG,IAcAC,EAdyBC,EAAQ,OAcjCC,EFMAC,KAAA,OEJEd,GATF,EAVA,SAAAe,GACEH,EAAQ,SAaV,kBAEA,MAUeI,EAAA,QAAAL,EAAiB","file":"static/js/27.c28f3381e22293b3b643.js","sourcesContent":["<template>\n    <div>\n      <div>\n        <h1>SQL注入</h1>\n        <p>所谓SQL注入，就是通过把SQL命令插入到Web表单提交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的SQL命令。具体来说，它是利用现有应用程序，将（恶意的）SQL命令注入到后台数据库引擎执行的能力，它可以通过在Web表单中输入（恶意）SQL语句得到一个存在安全漏洞的网站上的数据库，而不是按照设计者意图去执行SQL语句。</p>\n      </div>\n      <div>\n        <h2>SQL原理</h2>\n        <p>SQL注入攻击指的是通过构建特殊的输入作为参数传入Web应用程序，而这些输入大都是SQL语法里的一些组合，通过执行SQL语句进而执行攻击者所要的操作，其主要原因是程序没有细致地过滤用户输入的数据，致使非法数据侵入系统。</p>\n        <h2>SQL分类</h2>\n        <h3>平台层注入</h3>\n        <p>由不安全的数据库配置或数据库平台的漏洞所致</p>\n        <h3>代码层注入</h3>\n        <p>由于程序员对输入未进行细致地过滤，从而执行了非法的数据查询</p>\n        <h2>SQL产生原因</h2>\n        <p>①不当的类型处理；②不安全的数据库配置；③不合理的查询集处理；④不当的错误处理；⑤转义字符处理不合适；⑥多个提交处理不当。</p>\n      </div>\n      <div>注：代码设计不严谨很容易发生</div>\n    </div>\n</template>\n\n<script>\nexport default {\n  name: 'SQL'\n}\n</script>\n\n<style scoped>\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/view/safe/SQL.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',[_c('h1',[_vm._v(\"SQL注入\")]),_vm._v(\" \"),_c('p',[_vm._v(\"所谓SQL注入，就是通过把SQL命令插入到Web表单提交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的SQL命令。具体来说，它是利用现有应用程序，将（恶意的）SQL命令注入到后台数据库引擎执行的能力，它可以通过在Web表单中输入（恶意）SQL语句得到一个存在安全漏洞的网站上的数据库，而不是按照设计者意图去执行SQL语句。\")])]),_vm._v(\" \"),_c('div',[_c('h2',[_vm._v(\"SQL原理\")]),_vm._v(\" \"),_c('p',[_vm._v(\"SQL注入攻击指的是通过构建特殊的输入作为参数传入Web应用程序，而这些输入大都是SQL语法里的一些组合，通过执行SQL语句进而执行攻击者所要的操作，其主要原因是程序没有细致地过滤用户输入的数据，致使非法数据侵入系统。\")]),_vm._v(\" \"),_c('h2',[_vm._v(\"SQL分类\")]),_vm._v(\" \"),_c('h3',[_vm._v(\"平台层注入\")]),_vm._v(\" \"),_c('p',[_vm._v(\"由不安全的数据库配置或数据库平台的漏洞所致\")]),_vm._v(\" \"),_c('h3',[_vm._v(\"代码层注入\")]),_vm._v(\" \"),_c('p',[_vm._v(\"由于程序员对输入未进行细致地过滤，从而执行了非法的数据查询\")]),_vm._v(\" \"),_c('h2',[_vm._v(\"SQL产生原因\")]),_vm._v(\" \"),_c('p',[_vm._v(\"①不当的类型处理；②不安全的数据库配置；③不合理的查询集处理；④不当的错误处理；⑤转义字符处理不合适；⑥多个提交处理不当。\")])]),_vm._v(\" \"),_c('div',[_vm._v(\"注：代码设计不严谨很容易发生\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-33ffe116\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/view/safe/SQL.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-33ffe116\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./SQL.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./SQL.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./SQL.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-33ffe116\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./SQL.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-33ffe116\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/view/safe/SQL.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}